@function css_hsl($value){ @return unquote("hsl(#{$value})"); }
//
// VARIABLES
//

:root{
	--color-fg: 40 47% 89%;
	--color-bg: 0 0% 15%;
	--color-highlight: 355 81% 68%;
}
body.light{
	--color-fg: 40 47% 11%;
	--color-bg: 0 0% 85%;
	--color-highlight: 355 81% 22%;
}
// Colors
$color_regularBG: css_hsl(var(--color-bg));
$color_regularFG: css_hsl(var(--color-fg));
$color_highlight: css_hsl(var(--color-highlight));
$color_highlightLight: css_hsl(0 0% 91%);
$color_highlightDark: css_hsl(0 0% 0%);
$color_highlightMiddle: css_hsl(0 0% 26%);
$color_codeSelection: css_hsl(210 100% 84% / 26%);
$color_codeComment: css_hsl(116 40% 72%);
$color_codeText: css_hsl(220 13% 74%);
$color_codeFunction: css_hsl(34 79% 68%);
$color_codeVariable: css_hsl(65 20% 87%);
$color_codeNumber: css_hsl(99 28% 73%);
$color_codeAttribute: css_hsl(34 73% 75%);
$color_codeKeyword: css_hsl(263 63% 84%);
$color_codeString: css_hsl(224 73% 75%);
$color_codeTag: css_hsl(263 63% 84%);
$color_codeConstant: css_hsl(263 63% 84%);
$color_codeSupport: css_hsl(34 73% 75%);
$color_codeOperator: css_hsl(0 0% 100%);
$color_codePunctuation: css_hsl(0 0% 100%);
$color_codeOperatorWord: css_hsl(263 63% 84%);
// Alpha
$color_makeDarker: rgba(0,0,0,.25);
$color_makeDark: rgba(0,0,0,.5);

// Font stacks
$font_sans: "Trebuchet MS", Helvetica, sans-serif;
$font_monospace: "iA Writer Duospace", "Lucida Console", Monaco, monospace;
$font_serif: $font_monospace;

%bg-image {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='4' height='4' viewBox='0 0 4 4'%3E%3Cpath fill='%23151515' fill-opacity='1' d='M1 3h1v1H1V3zm2-2h1v1H3V1z'%3E%3C/path%3E%3C/svg%3E");
}
%block_hover {
  &:hover, &:active {
    opacity: .75;
  }
}
%focus{
  &:focus{
    outline: 2px dotted $color_highlightLight;
    outline-offset: -4px;
    transition: outline .15s;
  }
}
%focusLink{
  &:focus{
    outline: 2px dotted currentColor;
    outline-offset: 2px;
    transition: outline .15s;
  }
}

// Mobile breakpoints
@mixin mobile {
  @media screen and (max-width: 799px) {
    @content;
  }
}
// No flex fallback
@mixin is_flex {
  @supports (display: flex){
    @content;
  }
}
@mixin selectionResistantColor($color) {
  &,
  &::selection {
    color: $color;
  }
}
