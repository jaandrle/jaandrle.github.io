// Inspiration by https://github.com/AleksandrHovhannisyan/aleksandrhovhannisyan.com/blob/master/src/_sass/components/codeBlock.scss
// Code general
code {
  white-space: pre-line;
  font: .9em $font_monospace;
  border: 1px solid $color_highlightMiddle;
  background-color: $color_makeDarker;
  border-left-width: .2rem;
  padding: .1rem .25rem;
  border-radius: .5rem;

  @include mobile{
    word-break: break-word;
  }
}
// Figure - base style
.highlight {
  position: relative;
  background-color: $color_makeDarker;
  border-left: 2px solid $color_highlightLight;
  margin: .5rem 0 .5rem 0;
  .lineno {
    text-align: right;
  }
  *::selection {
    background-color: $color_codeSelection;
    // This will be overriden by more specific styles but retained for normal text and labels
    color: $color_codeText;
  }
  pre {
    font: .7rem $font_monospace;
    line-height: 1.5em;
    font-weight: bold;
    margin: 0px;
    white-space: pre;
  }
  >pre {
    padding: 1rem 1rem .5rem .5rem;
    margin-bottom: .5rem;
    max-height: 25em;
    overflow:auto;
    code {
      font: .7rem $font_monospace;
      line-height: 1.1em;
      font-weight: bold;
      color: #cdced6;
      border: none;
      background: none;
      padding: 0;
      padding-top: .5rem;
      display: block;
    }
  }
  .code {
    padding-left: 1rem;
  }
  .info {
    text-indent: 0;
  }
  [data-lang]::before {
    background: $color_makeDarker;
    font-size: .7rem;
    font-weight: bold;
    position: absolute;
    padding: .15rem .25rem;
    top: .5em;
    left: .5em;
  }
  [data-lang="php"]::before{
    content: "php";
    color: #c6acff;
  }
  [data-lang="html"]::before{
    content: "html";
    color: #e17255;
  }
  [data-lang="js"]::before,
  [data-lang="json"]::before{
    content: "js";
    color: #fff6ac;
  }
  [data-lang="console"]::before{
    content: ">_";
    color: #a6e1d9;
  }
}
// My colors inspired VS Code Dark Theme and modified for use with Rouge.
.highlight {
  // Comments
  .c, .cm, .cp, .c1, .cs {
    @include selectionResistantColor($color_codeComment);
  }

  // Functions
  .nf, .nx {
    @include selectionResistantColor($color_codeFunction);
  }

  // Attributes
  .na {
    @include selectionResistantColor($color_codeAttribute);
  }

  // Variables
  .bp, .nv, .vc, .vg, .vi, .err {
    @include selectionResistantColor($color_codeVariable);
  }

  // Numbers
  .m, .mf, .mh, .mi, .mo, .il {
    @include selectionResistantColor($color_codeNumber);
  }

  // Keywords
  .k, .kd, .kn, .kr, .kt {
    @include selectionResistantColor($color_codeKeyword);
  }

  // Constants
  .kc {
    @include selectionResistantColor($color_codeConstant);
  }

  // Pseudo
  .kp, .nb {
    @include selectionResistantColor($color_codeSupport);
  }

  // Strings
  .s, .sb, .sc, .s1, .s2 {
    @include selectionResistantColor($color_codeString);
  }

  // Classes/tags
  .nc, .nt, .nl {
    @include selectionResistantColor($color_codeTag);
  }

  // Punctuation
  .p {
    @include selectionResistantColor($color_codePunctuation);
  }

  .o {
    @include selectionResistantColor($color_codeOperator);
  }

  // Operators
  .ow {
    @include selectionResistantColor($color_codeOperatorWord);
  }
}
